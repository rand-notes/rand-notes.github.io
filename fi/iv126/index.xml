<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>iv126 on idk</title><link>https://rand-notes.github.io/fi/iv126/</link><description>Recent content in iv126 on idk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://rand-notes.github.io/fi/iv126/index.xml" rel="self" type="application/rss+xml"/><item><title>lec 03</title><link>https://rand-notes.github.io/fi/iv126/3/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://rand-notes.github.io/fi/iv126/3/</guid><description>Population-based Metaheuristics Genetic Algorithms Evolution Strategies Genetic Programming Ant Colony Optimization Particle Swarm Optimization Bee Colony Artificial Immune Systems Estimation of Distribution Algorithms general algo:
t = 0 while not end_condition: generate_popul(P_t) # generate new population P_t+1 = choose_new_popul() t += 1 Basic division:
Algorithms using evolution
Solution in population is choosed and reproduced with operators (mutation and crossovering).
e.g. genetics algorithms, evolution strategies
Algorithms using memory (blackboard)</description></item><item><title>lec 2</title><link>https://rand-notes.github.io/fi/iv126/2/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://rand-notes.github.io/fi/iv126/2/</guid><description>Neighborhoods Definition: Function of neighborhood N is mapping \( N: S \rightarrow 2^S \), which assign every solution s from Z, set of solutions \( N(S) \subset S \)
Effective Algorithms for Searching in Very Large Neighborhoods space size: polynom of higher order of magnitude (n &amp;gt; 2)
main problem is indentification of improving neighborhoods or best neighbor without enumeration of whole neighborhood.
Ejection Chain e.g. Capacitated Vehicle Routing Problem</description></item><item><title>lec 1</title><link>https://rand-notes.github.io/fi/iv126/1/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://rand-notes.github.io/fi/iv126/1/</guid><description>Approximate Methods is usually understood to give an approximate solution, with some kind of guarantee of performace. i.e. it solves TSP, and the total cost is never off by more than a factor of 2.
Exploration (Diversification) Terms Diversification and Intensification are being used mostly in conjunction with population-based optimization techniques
consists of probing a much larger portion of the search space with the hope of finding other promising solutions that are yet to be refined.</description></item><item><title>Environments, Agents, Optimizations</title><link>https://rand-notes.github.io/fi/iv126/0/</link><pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate><guid>https://rand-notes.github.io/fi/iv126/0/</guid><description>Environments Fully Observable vs Partially Observable If an agent&amp;rsquo;s sensors give it access to the complete state of the environment at each point in time, then we say that he task environment is fully observable. If the agents has no sensors at all then the environment is unobservable
Single-Agent vs Multi-Agent Environments For example, an agent solving a crossword puzzle by itself is clearly in a single-agent enviroment, whereas an agent playing chess is in a two-agent enviroment.</description></item><item><title/><link>https://rand-notes.github.io/fi/iv126/task/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rand-notes.github.io/fi/iv126/task/</guid><description>fyzicke stroje p \in P virtualni stroje v \in C
R(v, r) udava, kolik zdroje r vyuziva virtualni stroj v C(p, r) udava jakou kapacitu zdroje r je mozne na fyzickem stroji p naaalokavat SC(p, r) bezpecna kapacita zdroje r na fyzickem stroji p
plati: SC(p, r) &amp;lt; C(p, r)
MC(v) cena za migraci virtualniho stroje v PMC(p, p&amp;rsquo;) cena za migraci libovolneho virtualniho stroje z fyzickeho stroje p na fyzicky stroj p&amp;rsquo;.</description></item><item><title>adadas</title><link>https://rand-notes.github.io/ai/exam2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rand-notes.github.io/ai/exam2/</guid><description>basic/pokrocile prohledavani == grafy
ejection chain; cyclic exchange
hill climbing simulovane zihani - akceptuje i horsi threshold accepting - akceptuje s max zhorsenim o prah potopa - zmenusujeme hladinu tabu seznam - muzeme overridnout pomoci aspiracniho kriteria
Multistart local search, Iterativní lokální prohledávání
VNS - variable neighborhood search VND - variable neighborhood descent
deterministicka verze VNS rozsirujeme okoli, po uspechu jedeme od zacatky GLS - guided local search</description></item><item><title>algos</title><link>https://rand-notes.github.io/ai/exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rand-notes.github.io/ai/exam/</guid><description>k-opt TODO
k-distance TODO
Ejection Chain řetězec odstranění: posloupnost přesunů zákazníka z jednoho okruhu na následující úspěšná změna: žádný vrchol není v řešení více než jednou řetězec odstranění nemusí být cyklický (stačí umístit konzistentně posledního zákazníka do posledního okruhu) postup každý řetězec odstranění zahrnuje k úrovní začínajících na okruhu 1 a končících na okruhu k vrchol je odstraněn z okruhu 1 a přesunut na okruh 2, vrchol z okruhu 2 přesunut na okruh 3, atd.</description></item></channel></rss>